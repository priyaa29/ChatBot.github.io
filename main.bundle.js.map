{"version":3,"sources":["C:/chatapp/chatbot/src async","C:/chatapp/chatbot/src/app/app.component.css","C:/chatapp/chatbot/src/app/app.component.html","C:/chatapp/chatbot/src/app/app.component.ts","C:/chatapp/chatbot/src/app/app.module.ts","C:/chatapp/chatbot/src/app/chat.service.ts","C:/chatapp/chatbot/src/app/chat/chat-dialog/chat-dialog.component.css","C:/chatapp/chatbot/src/app/chat/chat-dialog/chat-dialog.component.html","C:/chatapp/chatbot/src/app/chat/chat-dialog/chat-dialog.component.ts","C:/chatapp/chatbot/src/app/chat/chat.module.ts","C:/chatapp/chatbot/src/environments/environment.ts","C:/chatapp/chatbot/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/chatapp/chatbot/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/chatapp/chatbot/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<chat-dialog></chat-dialog>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/chatapp/chatbot/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/chatapp/chatbot/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ChatModule } from './chat/chat.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ChatModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/chatapp/chatbot/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport {environment} from './../environments/environment';\nimport {ApiAiClient} from 'api-ai-javascript';\n\nimport {Observable} from 'rxjs/Observable';\nimport{BehaviorSubject} from 'rxjs/BehaviorSubject';\n\nexport class Message{\n  constructor(public content:string,public sentBy:string){}\n}\n\n@Injectable()\nexport class ChatService {\n\nreadonly token = environment.dialogflow.angularBot;\nreadonly client = new ApiAiClient({accessToken:this.token});\n\nconversation = new BehaviorSubject<Message[]>([]);\n  constructor() { }\n\n\n//Sends and receive Messages via  Dialog Flow\nconverse(msg:string){\nconst userMessage = new Message(msg,'user');\nthis.update(userMessage);\n\nreturn this.client.textRequest(msg)\n.then(res =>{\n      const speech = res.result.fulfillment.speech;\n      const botMessage = new Message(speech,'bot');\n      this.update(botMessage);\n});\n\n}\n\n//Adds Message to the source\nupdate(msg:Message){\n  this.conversation.next([msg]);\n}\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/chatapp/chatbot/src/app/chat.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".message {\\r\\n    border-radius: 50px;\\r\\n    margin: 0 15px 10px;\\r\\n    padding: 15px 20px;\\r\\n    position: relative;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.message.to {\\r\\n    background-color: #2095FE;\\r\\n    color: #fff;\\r\\n    margin-left: 100px;\\r\\n    text-align: right;\\r\\n}\\r\\n.message.from {\\r\\n    background-color: #E5E4E9;\\r\\n    color: #363636;\\r\\n    margin-right: 100px;\\r\\n}\\r\\n.message.to + .message.to,\\r\\n.message.from + .message.from {\\r\\nmargin-top: -10px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/chatapp/chatbot/src/app/chat/chat-dialog/chat-dialog.component.css\n// module id = ../../../../../src/app/chat/chat-dialog/chat-dialog.component.css\n// module chunks = 1","module.exports = \"\\n\\n<div class=\\\"jumbotron text-center\\\">\\n    <h1> ChatBot App</h1>\\n</div>\\n\\n\\n<ng-container *ngFor=\\\"let message of messages |async\\\">\\n\\n  <div class=\\\"message\\\" [ngClass]=\\\"{'from':message.sentBy ==='bot',\\n                                    'to':message.sentBy ==='user'}\\\">    \\n\\n      {{message.content}}                              \\n  </div>\\n\\n</ng-container>\\n\\n\\n<label for =\\\"nameField\\\">Your Message</label><br><br>\\n\\n<input [(ngModel)]=\\\"formValue\\\" (keyup.enter)=\\\"sendMessage()\\\" type=\\\"text\\\"><br><br>\\n\\n<button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\"(click)=\\\"sendMessage()\\\">Send</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/chatapp/chatbot/src/app/chat/chat-dialog/chat-dialog.component.html\n// module id = ../../../../../src/app/chat/chat-dialog/chat-dialog.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { ChatService,Message } from '../../chat.service';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/scan';\n\n@Component({\n  selector: 'chat-dialog',\n  templateUrl: './chat-dialog.component.html',\n  styleUrls: ['./chat-dialog.component.css']\n})\nexport class ChatDialogComponent implements OnInit {\n\n  messages : Observable<Message[]>;\n  formValue : string;\n\n\n  constructor(private chat:ChatService) { }\n\n  ngOnInit() {\nthis.messages = this.chat.conversation.asObservable()\n    .scan((acc,val) => acc.concat(val));\n  }\n  sendMessage(){\n    this.chat.converse(this.formValue);\n    this.formValue='';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/chatapp/chatbot/src/app/chat/chat-dialog/chat-dialog.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatService } from '../chat.service';\nimport { ChatDialogComponent } from './chat-dialog/chat-dialog.component';\n\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [ChatDialogComponent],\n  exports: [ChatDialogComponent],\n  providers: [ChatService]\n})\nexport class ChatModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/chatapp/chatbot/src/app/chat/chat.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n\n  dialogflow:{\n    angularBot:'fe2183d870d24819909dc2a146a89c34'\n  }\n  \n};\n\n\n\n\n// WEBPACK FOOTER //\n// C:/chatapp/chatbot/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/chatapp/chatbot/src/main.ts"],"sourceRoot":"webpack:///"}